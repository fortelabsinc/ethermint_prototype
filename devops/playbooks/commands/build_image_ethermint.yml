---
- hosts: localhost
  gather_facts: false
  vars:
    container_folder: forte
    container_name: ethermint
    ansible_python_interpreter: /usr/bin/python3
    chain_key_name: local_ethermint_key
    chain_key_password: local_ethermint_password
    chain_moniker: local_ethermint_moniker
    chain_id: 1   

  pre_tasks:
    - name: Create and start the Builder container
      docker_container:
        image: golang:alpine
        name: '{{ container_name }}_builder'
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        command: sleep infinity
    
    - name: Add the new Builder container to Ansible Hosts
      add_host:
        hostname: '{{ container_name }}_builder'
        ansible_connection: docker
        ansible_python_interpreter: /usr/bin/python3

    - name: Kill any App containers
      docker_container:
        name: '{{ container_name }}'
        state: absent

    - name: Ensure Python is installed on Builder container
      raw: >
        apk update &&
        apk upgrade &&
        apk add python3 git docker py-pip &&
        pip3 install docker
      delegate_to: '{{ container_name }}_builder'
    
    - name: Gather facts of the Builder Container
      setup:
      delegate_to: '{{ container_name }}_builder'
    
    - name: Clone the ethermint repo into the Builder Container
      git:
        repo: https://github.com/starcard-org/ethermint.git
        dest: '/root/{{ container_name }}'
        accept_hostkey: yes
      delegate_to: '{{ container_name }}_builder'
    
    - name: Build the Base container 
      docker_image:
        name: '{{ container_name }}_base'
        build:
          pull: yes
          path: /root/{{ container_name }}
        source: build
      delegate_to: '{{ container_name }}_builder'

    - name: Launch the Base container
      docker_container:
        image: '{{ container_name }}_base'
        name: '{{ container_name }}_base'
        state: started

    - name: Add the Base container to the inventory
      add_host:
        hostname: '{{ container_name }}_base'
        ansible_connection: docker
        ansible_python_interpreter: /usr/bin/python3
    
    - name: Config the Chain container
      raw: >
        /usr/bin/yes {{ chain_key_password }} | /usr/bin/emintcli keys add {{ chain_key_name }} > /root/chain_key_output.txt &&
        /usr/bin/emintd init {{ chain_moniker }} --chain-id {{ chain_id }} > /root/chain_init_output.txt  &&
        /usr/bin/emintcli config chain-id {{ chain_id }} &&
        /usr/bin/emintcli config output json &&
        /usr/bin/emintcli config indent true &&
        /usr/bin/emintcli config trust-node true &&
        /usr/bin/yes {{ chain_key_password }} | /usr/bin/emintd add-genesis-account $(/usr/bin/emintcli keys show {{ chain_key_name }} -a) 1000000000000000000photon,1000000000000000000stake && 
        /usr/bin/yes {{ chain_key_password }} | /usr/bin/emintd gentx --name {{ chain_key_name }} &&
        /usr/bin/emintd collect-gentxs > /root/chain_collect_output.txt &&
        /usr/bin/emintd validate-genesis
      delegate_to: '{{ container_name }}_base'
    
    - name: Commit the Chain container to docker.
      command: >
        docker commit
        -c 'CMD ["/usr/bin/emintd", "start", "--pruning=nothing"]'
        {{ container_name }}_base {{ container_folder }}/{{ container_name }}_chain
    
    - name: Create Container for the Node
      docker_container:
        image: alpine
        name: '{{ container_name }}_node'
        command: sleep infinity

    - name: Add the Node container to the inventory
      add_host:
        hostname: '{{ container_name }}_node'
        ansible_connection: docker
        ansible_python_interpreter: /usr/bin/python3
    
    - name: Ensure Python is installed on Node container
      raw: >
        apk update &&
        apk upgrade &&
        apk add --update ca-certificates python3 
      delegate_to: '{{ container_name }}_node'
    
    - name: Pull over the needed commands to the Node container
      raw: >
        docker cp ethermint_base:/usr/bin/emintcli ./emintcli && 
        docker cp ethermint_base:/usr/bin/emintd ./emintd
    
    - name: Copy over the needed commands to the Node container
      raw: >
        docker cp ./emintcli ethermint_node:/usr/bin/emintcli && 
        docker cp ./emintd ethermint_node:/usr/bin/emintd
    
    - name: Remove the files
      raw: >
        rm ./emintcli &&
        rm ./emintd

    - name: Commit the Node container to docker.
      command: >
        docker commit
        -c 'CMD ["/usr/bin/emintcli", "rest-server", "--laddr", "\"tcp://emint_chain:8545\"", "--unlock-key", "{{chain_key_name}}"]'
        {{ container_name }}_node {{ container_folder }}/{{ container_name }}_node

  post_tasks: 
    - name: Remove the Node container
      docker_container:
        name: '{{ container_name }}_node'
        state: absent

    - name: Remove the Base container
      docker_container:
        name: '{{ container_name }}_base'
        state: absent

    - name: Delete the Base container image
      docker_image:
        name: '{{ container_name }}_base'
        state: absent

    - name: Remove Builder container.
      docker_container:
        name: '{{ container_name }}_builder'
        state: absent